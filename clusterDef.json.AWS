{
  "type": "CLUSTERTYPE",
  "username": "USERNAME",
  "resourceData": {
    "architecture": "amd64",
    "availability_zone": "us-east-1b",
    "controller_efa": false,
    "controller_image": "ami-02b1d2512cb34242c",
    "export_fs_type": "xfs",
    "image_disk_count": 1,
    "image_disk_name": "snap-0a127a48212c4e816",
    "image_disk_size_gb": 350,
    "management_shape": "MANAGEMENT_SHAPE",
    "partition_config": [
      {
        "name": "compute",
        "instance_type": "COMPUTE_INSTANCE_TYPE",
        "architecture": "amd64",
        "availability_zone": "us-east-1b",
        "default": "YES",
        "efa": true,
        "elastic_image": "ami-02b1d2512cb34242c",
        "enable_spot": false,
        "capacity_reservation": false,
        "max_node_num": 400
      },
      {
        "name": "process",
        "instance_type": "PROCESS_INSTANCE_TYPE",
        "max_node_num": 100,
        "elastic_image": "ami-02b1d2512cb34242c",
        "availability_zone": "us-east-1b",
        "default": "NO",
        "enable_spot": false,
        "efa": false,
        "capacity_reservation": false,
        "architecture": "amd64"
      }
    ],
    "region": "us-east-1",
    "disks": [],
    "slurm_suspend_time": "",
    "slurm_resume_timeout": "",
    "slurm_suspend_timeout": "",
    "slurm_return_to_service": ""
  },
  "attachedStorages": [
    {
      "storage": "647f4ed8ae16b68e0481ea7f",
      "mountPoint": "/lustre",
      "export": ""
    },
    {
      "storage": "647fbbe343d0f8dd315ab0af",
      "mountPoint": "/bucket",
      "export": ""
    }
  ],
  "universalData": {
    "resource_account": "NOAA AWS Commercial (Vault)",
    "project": "PROJECT",
    "access_public_key": "",
    "user_bootstrap": "ALLNODES\n/contrib/Wei.Huang/pwsupport/mount-epic-contrib.sh\n/contrib/USERNAME/setup.sh",
    "health_check": "# (optional) User-specific master node Health Check script - \n# you can use this run custom node Health Check logic  upon cluster start\ngit clone https://github.com/parallelworks/cloud-cluster-healthchecks.git /tmp/healthcheck\n/tmp/healthcheck/healthcheck.sh"
  }
}

